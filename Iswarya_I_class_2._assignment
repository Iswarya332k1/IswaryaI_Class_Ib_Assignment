# Define the function to classify genes
classify_gene <- function(loFC, padj) {
  if (is.na(padj)) padj <- 1  # handle missing p-values
  
  if (padj <0.05) {
     if (logFC > 1) {
       return ("upregulated")
     } else if (logFC < -1) {
       return("Downregulated")
     }
  }
  return("Not_Significant")
}

# Set up directories
input_dir <- "Raw_Data"
output_dir <- "Results"

# Create output folder if it doesn't exist
if (!dir.exists(output_dir)) {
  dir.create(output_dir)
}

# List files to process
files_to_process <- c("DEGs_data_1.csv", "DEGs_data_2.csv")

# Prepare empty list to store results
result_list <- list()

# Process each file
for (file_name in files_to_process) {
  cat("\nProcessing:", file_name, "\n")
}

# Import dataset
input_file_path <- file.path(input_dir, file_name)
data <- read.csv(input_file_path, header= TRUE)

# Handle missing padj values (replace with 1)
if ("padj" %in% names(data)) {
  missing_count <- sum(is.na(data$padj))
  cat("Missing padj values:", missing_count, "\n")
  data$padj[is.na(data$padj)] <- 1
}
}

# Apply classification function to each row
data$status <- mapply(classify_gene, data$logFC, data$pad)

# Save results in R List
result_list[[file_name]] <- data

# Save results to CSV file
output_file_path <- file.path(output_dir, paste0("classified_", file_name))
write.csv(data, output_file_path, row.names = FALSE)
cat("Results saved to:", output_file_path, "\n")

# Print summary counts
cat("\nSummary for", file_name, ":\n")
cat("Total genes:", nrow(data), "\n")
cat("Upregulated genes:", sum(data$status == "Upregulated"), "\n")
cat("Downregulated genes:", sum(data$status == "Downregulated"), "\n")
cat("Not significant genes:", sum(data$status == "Not_Significant"), "\n")

# Use table() for summary
cat("\nTable summary:\n")
print(table(data$status))
cat("\n" + strrep("_", 50) + "\n")
}

# Access individual results if needed
results_1 <- result_list[["DEGs_data_1.csv"]]
results_2 <- result_list[["DEGs_data_2.csv"]]
